{"version":3,"sources":["webpack:///./src/pages/posts.tsx","webpack:///./node_modules/lodash/groupBy.js"],"names":["IndexPage","props","blogs","data","allMarkdownRemark","edges","map","e","node","groupedBlogs","blog","frontmatter","date","concat","className","key","id","to","path","title","baseAssignValue","createAggregator","hasOwnProperty","Object","prototype","groupBy","result","value","call","push","module","exports"],"mappings":"2KAmEeA,UAxDG,SAACC,GAClB,IAAIC,EAAQD,EAAME,KAAKC,kBAAkBC,MAAMC,KAAI,SAACC,GAAD,OAAOA,EAAEC,QACtDC,EAAe,IAAQP,GAAO,SAACQ,GAAD,OACnCA,EAAKC,YAAYC,KAAO,WAAa,iBAQtC,OALAV,EAAQ,GAAGW,OACVJ,EAAY,UAAgB,GAC5BA,EAAY,aAAmB,IAI/B,gBAAC,IAAD,KACC,gBAAC,IAAD,qBACA,+BACC,sBAAIK,UAAU,aACZZ,EAAMI,KAAI,SAACI,GACX,OACC,sBAAIK,IAAKL,EAAKM,IACb,gBAAC,IAAD,CAAMC,GAAIP,EAAKC,YAAYO,MACzBR,EAAKC,YAAYQ,OACX,IACR,uBAAKL,UAAU,mBACbJ,EAAKC,YAAYC,e,uBClC3B,IAAIQ,EAAkB,EAAQ,QAC1BC,EAAmB,EAAQ,QAM3BC,EAHcC,OAAOC,UAGQF,eAyB7BG,EAAUJ,GAAiB,SAASK,EAAQC,EAAOZ,GACjDO,EAAeM,KAAKF,EAAQX,GAC9BW,EAAOX,GAAKc,KAAKF,GAEjBP,EAAgBM,EAAQX,EAAK,CAACY,OAIlCG,EAAOC,QAAUN","file":"component---src-pages-posts-tsx-d151d9ae86d4727b5894.js","sourcesContent":["import * as React from 'react';\nimport Layout from '../ui/Layout';\nimport {graphql} from 'gatsby';\nimport Header from '../components/Header';\nimport Link from '../components/Link';\nimport {groupBy} from 'lodash';\n\ninterface Props {\n\tdata: any;\n}\n\nconst IndexPage = (props: React.PropsWithChildren<Props>): JSX.Element => {\n\tlet blogs = props.data.allMarkdownRemark.edges.map((e) => e.node);\n\tconst groupedBlogs = groupBy(blogs, (blog) =>\n\t\tblog.frontmatter.date ? 'withDate' : 'withoutDate'\n\t);\n\n\tblogs = [].concat(\n\t\tgroupedBlogs['withDate'] || [],\n\t\tgroupedBlogs['withoutDate'] || []\n\t);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Header>All articles</Header>\n\t\t\t<section>\n\t\t\t\t<ul className=\"space-y-1\">\n\t\t\t\t\t{blogs.map((blog) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={blog.id}>\n\t\t\t\t\t\t\t\t<Link to={blog.frontmatter.path}>\n\t\t\t\t\t\t\t\t\t{blog.frontmatter.title}\n\t\t\t\t\t\t\t\t</Link>{' '}\n\t\t\t\t\t\t\t\t<div className=\"sm:inline-block\">\n\t\t\t\t\t\t\t\t\t{blog.frontmatter.date}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</Layout>\n\t);\n};\n\nexport const pageQuery = graphql`\n\tquery AllPostsQuery {\n\t\tallMarkdownRemark(\n\t\t\tsort: {order: DESC, fields: [frontmatter___date]}\n\t\t\tfilter: {frontmatter: {path: {regex: \"/^/blogs.*/\"}}}\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\texcerpt(pruneLength: 250)\n\t\t\t\t\tid\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t\t\tpath\n\t\t\t\t\t\ttags\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default IndexPage;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n"],"sourceRoot":""}